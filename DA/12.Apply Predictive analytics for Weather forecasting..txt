# Step 1: Import Necessary Libraries 
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression 
from sklearn.metrics import mean_squared_error, r2_score 

# Step 2: Create a Mock Weather Dataset 
data = { 
    'Temperature': [30, 32, 33, 31, 29, 28, 25, 27, 30, 31, 33, 35, 36, 37, 34], 
    'Humidity': [80, 75, 77, 70, 85, 88, 90, 85, 80, 78, 76, 74, 73, 72, 71], 
    'Wind Speed': [10, 12, 15, 11, 13, 14, 9, 10, 12, 11, 10, 9, 8, 7, 6], 
    'Pressure': [1010, 1012, 1011, 1010, 1011, 1013, 1012, 1010, 1011, 1012, 
                 1013, 1014, 1015, 1016, 1017], 
    'Month': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3] 
} 

# Convert to DataFrame 
df = pd.DataFrame(data) 

# Step 3: Explore the Dataset 
print(df.head()) 
print("\nSummary Statistics:") 
print(df.describe()) 

# Step 5: Select Features and Target Variable 
X = df[['Humidity', 'Wind Speed', 'Pressure', 'Month']] 
y = df['Temperature'] 

# Step 6: Split the Data 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 

# Step 7: Train the Model 
model = LinearRegression() 
model.fit(X_train, y_train) 

# Step 8: Make Predictions 
y_pred = model.predict(X_test) 

# Step 9: Evaluate the Model 
mse = mean_squared_error(y_test, y_pred) 
r2 = r2_score(y_test, y_pred) 
print(f"\nMean Squared Error: {mse:.2f}") 
print(f"R-squared: {r2:.2f}") 

# Step 10: Visualization 
plt.scatter(y_test, y_pred, color='blue')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=2)  # line of perfect prediction
plt.xlabel('Actual Temperature') 
plt.ylabel('Predicted Temperature') 
plt.title('Actual vs Predicted Temperature') 
plt.grid(True)
plt.show() 

# Step 11: Model Coefficients 
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient']) 
print("\nModel Coefficients:") 
print(coefficients)
