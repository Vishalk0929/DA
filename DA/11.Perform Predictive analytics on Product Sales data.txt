# Step 1: Import Necessary Libraries 
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression 
from sklearn.metrics import mean_squared_error, r2_score 

# Step 2: Create a Mock Product Sales Dataset 
data = { 
    'Price': [15, 20, 25, 30, 35, 40, 45, 50, 55, 60], 
    'Advertising': [1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], 
    'Season': ['Spring', 'Summer', 'Fall', 'Winter', 'Spring', 'Summer', 'Fall', 'Winter', 'Spring', 'Summer'], 
    'Sales': [150, 180, 160, 140, 130, 120, 110, 115, 200, 210] 
} 

# Convert the dictionary into a pandas DataFrame 
df = pd.DataFrame(data) 

# Step 3: Preprocess the Data 
# Convert 'Season' to numeric values (Spring = 0, Summer = 1, Fall = 2, Winter = 3) 
df['Season'] = df['Season'].map({'Spring': 0, 'Summer': 1, 'Fall': 2, 'Winter': 3}) 

# Step 4: Select Features and Target Variable 
X = df[['Price', 'Advertising', 'Season']]  # Features 
y = df['Sales']  # Target variable (Sales) 

# Step 5: Split the Data into Training and Testing Sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 

# Step 6: Train the Linear Regression Model 
model = LinearRegression() 
model.fit(X_train, y_train) 

# Step 7: Make Predictions 
y_pred = model.predict(X_test) 

# Step 8: Evaluate the Model 
mse = mean_squared_error(y_test, y_pred) 
r2 = r2_score(y_test, y_pred) 

# Print Evaluation Metrics 
print(f'Mean Squared Error: {mse}') 
print(f'R-squared: {r2}') 

# Step 9: Visualize the Results 
# Plot Actual vs Predicted Sales 
plt.scatter(y_test, y_pred) 
plt.xlabel('Actual Sales') 
plt.ylabel('Predicted Sales') 
plt.title('Actual vs Predicted Sales') 
plt.show() 

# Step 10: Model Coefficients 
print("\nModel Coefficients:") 
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient']) 
print(coefficients)
